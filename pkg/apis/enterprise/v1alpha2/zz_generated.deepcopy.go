// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkEnterprise) DeepCopyInto(out *SplunkEnterprise) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkEnterprise.
func (in *SplunkEnterprise) DeepCopy() *SplunkEnterprise {
	if in == nil {
		return nil
	}
	out := new(SplunkEnterprise)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SplunkEnterprise) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkEnterpriseList) DeepCopyInto(out *SplunkEnterpriseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SplunkEnterprise, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkEnterpriseList.
func (in *SplunkEnterpriseList) DeepCopy() *SplunkEnterpriseList {
	if in == nil {
		return nil
	}
	out := new(SplunkEnterpriseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SplunkEnterpriseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkEnterpriseSpec) DeepCopyInto(out *SplunkEnterpriseSpec) {
	*out = *in
	if in.SplunkVolumes != nil {
		in, out := &in.SplunkVolumes, &out.SplunkVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	out.Resources = in.Resources
	out.Topology = in.Topology
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkEnterpriseSpec.
func (in *SplunkEnterpriseSpec) DeepCopy() *SplunkEnterpriseSpec {
	if in == nil {
		return nil
	}
	out := new(SplunkEnterpriseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkEnterpriseStatus) DeepCopyInto(out *SplunkEnterpriseStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkEnterpriseStatus.
func (in *SplunkEnterpriseStatus) DeepCopy() *SplunkEnterpriseStatus {
	if in == nil {
		return nil
	}
	out := new(SplunkEnterpriseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkResourcesSpec) DeepCopyInto(out *SplunkResourcesSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkResourcesSpec.
func (in *SplunkResourcesSpec) DeepCopy() *SplunkResourcesSpec {
	if in == nil {
		return nil
	}
	out := new(SplunkResourcesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkTopologySpec) DeepCopyInto(out *SplunkTopologySpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkTopologySpec.
func (in *SplunkTopologySpec) DeepCopy() *SplunkTopologySpec {
	if in == nil {
		return nil
	}
	out := new(SplunkTopologySpec)
	in.DeepCopyInto(out)
	return out
}
